    <!-- Sidebar -->
    <div id="pc-sidebar" class="sidebar transition hidden lg:fixed lg:inset-y-0 lg:z-50 lg:flex lg:w-56 lg:flex-col left-0">
        <div id="pc-sidebar2" class="flex grow flex-col overflow-hidden bg-transparent border border-neutral-800/10 dark:border-white/5">
           <nav class="flex flex-1 flex-col">
              <div class="pl-6 pt-4 pb-4 flex">
                 <a href="/" class="flex">
                    <img src="/assets/logo.png" class="bg-neutral-950/90 p-1 dark:bg-transparent h-10 w-10 -mt-1 rounded-xl mr-3 inline-flex light:shadow-sm">
                    <h1 class="text-neutral-700 dark:text-white font-medium tracking-tight text-lg">Airlink</h1>
                 </a>
              </div>
                   <!-- User info -->
            <div class="flex items-center space-x-4 py-4 px-4 border-y border-neutral-800/10 dark:border-white/5">
            <img class="h-8 w-8 rounded-xl border border-neutral-700/10" src="https://api.dicebear.com/9.x/thumbs/svg?seed=<%= user.username %>" alt="User avatar">
            <div>
                <p class="text-1sm font-medium text-neutral-700 dark:text-white">
                  <%= user.username %>
                  <span class="text-1xs text-neutral-500"><sup class="mt-1">#<%= String(user.id).padStart(4, '0') %></sup></span>
                </p>
                <p class="text-xs text-neutral-600 dark:text-neutral-400"><%= user.description %></p>
              </div>
              
          </div>
              <ul role="list" class="flex flex-1 flex-col gap-y-7 mt-2">
                 <li>
                    <ul role="list" class="-mx-2 space-y-1">
                       <div id="active-background" class="absolute left-2 w-[calc(100%-1.5rem)] h-9 transition-transform duration-200 ease-in-out z-0 bg-neutral-500/20 border border-neutral-700/10 dark:bg-white/5 rounded-xl"></div>
                       <li>
                          <a href="/dashboard" class="transition nav-link mt-1 text-neutral-600 dark:text-neutral-400 px-4 mx-4 group flex gap-x-3 py-1.5 rounded-xl text-sm leading-6 font-normal" searchdata="container instances servers" subterm="jegli:/server/servername">
                           <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 mt-0.5 h-5">
                              <path d="M12.378 1.602a.75.75 0 0 0-.756 0L3 6.632l9 5.25 9-5.25-8.622-5.03ZM21.75 7.93l-9 5.25v9l8.628-5.032a.75.75 0 0 0 .372-.648V7.93ZM11.25 22.18v-9l-9-5.25v8.57a.75.75 0 0 0 .372.648l8.628 5.033Z" />
                            </svg>                                                      
                             <span>Servers</span>
                          </a>
                          <a href="/account" searchdata="account profile <%= user.username %>" class="transition nav-link mt-1 text-neutral-600 dark:text-neutral-400 px-4 mx-4 group flex gap-x-3 py-1.5 rounded-xl text-sm leading-6 font-normal">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 mt-0.5 h-5">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M17.982 18.725A7.488 7.488 0 0 0 12 15.75a7.488 7.488 0 0 0-5.982 2.975m11.963 0a9 9 0 1 0-11.963 0m11.963 0A8.966 8.966 0 0 1 12 21a8.966 8.966 0 0 1-5.982-2.275M15 9.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
                              </svg>
                                                                                       
                             <span>Account</span>
                          </a>
                         
                         <script>
                             document.addEventListener("DOMContentLoaded", function() {
                                 document.querySelectorAll('.svg-icon').forEach(function(span) {
                                     const url = span.getAttribute('data-icon-url');
                         
                                     fetch(url)
                                         .then(response => {
                                             if (!response.ok) {
                                                 throw new Error('Network response was not ok');
                                             } else if (response.status !== 200) {
                                                 throw new Error(`Request failed with status ${response.status}`);
                                             } else if (!response.text().includes('<svg')) {
                                                throw new Error('Response does not contain an SVG');
                                             }
                                             return response.text();
                                         })
                                         .then(svgContent => {
                                             span.innerHTML = svgContent;
                                         })
                                         .catch(error => {
                                             console.error('Error on Loading the SVG:', error);
                                         });
                                 });
                             });
                         </script>
                         
                       </li>
                       <% if (user.isAdmin == true) { %>
                       <p class="pl-8 text-neutral-600 dark:text-neutral-400 text-xs font-medium pt-6 pb-2"><span>Admin Panel</span></p>
                       <li>
                          <a href="/admin/overview" searchdata="admin overview control" class=" transition nav-link mt-1 text-neutral-600 dark:text-neutral-400 px-4 mx-4 group flex gap-x-3 py-1.5 rounded-xl text-sm leading-6 font-normal">
                           <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 mt-0.5 h-5">
                              <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6A2.25 2.25 0 0 1 6 3.75h2.25A2.25 2.25 0 0 1 10.5 6v2.25a2.25 2.25 0 0 1-2.25 2.25H6a2.25 2.25 0 0 1-2.25-2.25V6ZM3.75 15.75A2.25 2.25 0 0 1 6 13.5h2.25a2.25 2.25 0 0 1 2.25 2.25V18a2.25 2.25 0 0 1-2.25 2.25H6A2.25 2.25 0 0 1 3.75 18v-2.25ZM13.5 6a2.25 2.25 0 0 1 2.25-2.25H18A2.25 2.25 0 0 1 20.25 6v2.25A2.25 2.25 0 0 1 18 10.5h-2.25a2.25 2.25 0 0 1-2.25-2.25V6ZM13.5 15.75a2.25 2.25 0 0 1 2.25-2.25H18a2.25 2.25 0 0 1 2.25 2.25V18A2.25 2.25 0 0 1 18 20.25h-2.25A2.25 2.25 0 0 1 13.5 18v-2.25Z" />
                            </svg>                            
                             <span>Overview</span>
                          </a>
                       </li>
                       <li>
                          <a href="/admin/settings" class=" transition nav-link mt-1 text-neutral-600 dark:text-neutral-400 px-4 mx-4 group flex gap-x-3 py-1.5 rounded-xl text-sm leading-6 font-normal">
                           <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 mt-0.5 h-5">
                              <path stroke-linecap="round" stroke-linejoin="round" d="M9.594 3.94c.09-.542.56-.94 1.11-.94h2.593c.55 0 1.02.398 1.11.94l.213 1.281c.063.374.313.686.645.87.074.04.147.083.22.127.325.196.72.257 1.075.124l1.217-.456a1.125 1.125 0 0 1 1.37.49l1.296 2.247a1.125 1.125 0 0 1-.26 1.431l-1.003.827c-.293.241-.438.613-.43.992a7.723 7.723 0 0 1 0 .255c-.008.378.137.75.43.991l1.004.827c.424.35.534.955.26 1.43l-1.298 2.247a1.125 1.125 0 0 1-1.369.491l-1.217-.456c-.355-.133-.75-.072-1.076.124a6.47 6.47 0 0 1-.22.128c-.331.183-.581.495-.644.869l-.213 1.281c-.09.543-.56.94-1.11.94h-2.594c-.55 0-1.019-.398-1.11-.94l-.213-1.281c-.062-.374-.312-.686-.644-.87a6.52 6.52 0 0 1-.22-.127c-.325-.196-.72-.257-1.076-.124l-1.217.456a1.125 1.125 0 0 1-1.369-.49l-1.297-2.247a1.125 1.125 0 0 1 .26-1.431l1.004-.827c.292-.24.437-.613.43-.991a6.932 6.932 0 0 1 0-.255c.007-.38-.138-.751-.43-.992l-1.004-.827a1.125 1.125 0 0 1-.26-1.43l1.297-2.247a1.125 1.125 0 0 1 1.37-.491l1.216.456c.356.133.751.072 1.076-.124.072-.044.146-.086.22-.128.332-.183.582-.495.644-.869l.214-1.28Z" />
                              <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
                            </svg>                            
                             <span>Settings</span>
                          </a>
                       </li>
                       <li>
                        <a href="/admin/servers" class=" transition nav-link mt-1 text-neutral-600 dark:text-neutral-400 px-4 mx-4 group flex gap-x-3 py-1.5 rounded-xl text-sm leading-6 font-normal">
                           <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 mt-0.5 h-5">
                              <path stroke-linecap="round" stroke-linejoin="round" d="M5.25 14.25h13.5m-13.5 0a3 3 0 0 1-3-3m3 3a3 3 0 1 0 0 6h13.5a3 3 0 1 0 0-6m-16.5-3a3 3 0 0 1 3-3h13.5a3 3 0 0 1 3 3m-19.5 0a4.5 4.5 0 0 1 .9-2.7L5.737 5.1a3.375 3.375 0 0 1 2.7-1.35h7.126c1.062 0 2.062.5 2.7 1.35l2.587 3.45a4.5 4.5 0 0 1 .9 2.7m0 0a3 3 0 0 1-3 3m0 3h.008v.008h-.008v-.008Zm0-6h.008v.008h-.008v-.008Zm-3 6h.008v.008h-.008v-.008Zm0-6h.008v.008h-.008v-.008Z" />
                            </svg>                       
                           <span>Servers</span>
                        </a>
                     </li>
                       <li>
                        <a href="/admin/users" class=" transition nav-link mt-1 text-neutral-600 dark:text-neutral-400 px-4 mx-4 group flex gap-x-3 py-1.5 rounded-xl text-sm leading-6 font-normal">
                           <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 mt-0.5 h-5">
                              <path stroke-linecap="round" stroke-linejoin="round" d="M15 19.128a9.38 9.38 0 0 0 2.625.372 9.337 9.337 0 0 0 4.121-.952 4.125 4.125 0 0 0-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 0 1 8.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0 1 11.964-3.07M12 6.375a3.375 3.375 0 1 1-6.75 0 3.375 3.375 0 0 1 6.75 0Zm8.25 2.25a2.625 2.625 0 1 1-5.25 0 2.625 2.625 0 0 1 5.25 0Z" />
                            </svg>                                                     
                           <span>Users</span>
                        </a>
                     </li>
                       <li>
                        <a href="/admin/nodes" class=" transition nav-link mt-1 text-neutral-600 dark:text-neutral-400 px-4 mx-4 group flex gap-x-3 py-1.5 rounded-xl text-sm leading-6 font-normal">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 mt-0.5 h-5">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M6.429 9.75 2.25 12l4.179 2.25m0-4.5 5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0 4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0-5.571 3-5.571-3" />
                              </svg>                          
                           <span>Nodes</span>
                        </a>
                     </li>
                       <% } %>
                    </ul>
                 </li>
                 <li class="mt-auto border-t border-neutral-800/10 dark:border-white/5">
                    <a href="/logout" class="group -mx-2 flex gap-x-3 rounded-xl pl-6 py-4 text-sm font-medium leading-6 text-neutral-500 transition hover:text-neutral-700 dark:hover:text-neutral-500/80">
                       <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 mt-0.5 h-5">
                          <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 9V5.25A2.25 2.25 0 0 1 10.5 3h6a2.25 2.25 0 0 1 2.25 2.25v13.5A2.25 2.25 0 0 1 16.5 21h-6a2.25 2.25 0 0 1-2.25-2.25V15m-3 0-3-3m0 0 3-3m-3 3H15" />
                       </svg>
                       <span>Logout</span>
                    </a>
                 </li>
              </ul>
           </nav>
        </div>
     </div>

     <script>
      document.addEventListener('DOMContentLoaded', () => {
        const navLinks = document.querySelectorAll('.nav-link');
        const activeBackground = document.getElementById('active-background');
        let isAnimating = false;
        let currentActiveLink = null;
    
        const getCookie = (name) => {
          const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
          return match ? match[2] : null;
        };
        
        const setCookie = (name, value, days) => {
          const date = new Date();
          date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
          document.cookie = `${name}=${value}; expires=${date.toUTCString()}; path=/`;
        };
    
        const updateActiveBackground = (link) => {
          const linkRect = link.getBoundingClientRect();
          const navRect = link.closest('ul').getBoundingClientRect();
          const topOffset = linkRect.top - navRect.top + link.closest('ul').scrollTop;
    
          activeBackground.style.height = `${linkRect.height}px`;
          activeBackground.style.transform = `translateY(${topOffset}px)`;
    
          setCookie('lastActiveLink', link.id, 7);
          currentActiveLink = link;
        };
    
        const moveActiveBackgroundInstantly = (link) => {
          activeBackground.style.transition = 'none';
          updateActiveBackground(link);
          requestAnimationFrame(() => {
            activeBackground.style.transition = 'transform 0.3s ease, height 0.3s ease';
          });
        };
    
        const updateActiveLink = (currentPath) => {
          let foundActive = false;
          navLinks.forEach((link) => {
            const adjustedPath = currentPath.replace('instance/', 'instances');
            const isActive = adjustedPath.startsWith(link.getAttribute('href'));
    
            link.classList.toggle('active', isActive);
    
            if (isActive) {
              currentActiveLink ? updateActiveBackground(link) : moveActiveBackgroundInstantly(link);
              foundActive = true;
            }
          });
    
          if (!foundActive) {
            activeBackground.style.transform = 'translateY(0)';
            activeBackground.style.height = '0px';
          }
        };
    
        const lastActiveLinkId = getCookie('lastActiveLink');
        if (lastActiveLinkId) {
          const lastActiveLink = document.getElementById(lastActiveLinkId);
          if (lastActiveLink) {
            lastActiveLink.classList.add('active');
            moveActiveBackgroundInstantly(lastActiveLink);
          }
        }
    
        const animatePageTransition = (href) => {
          if (isAnimating) return;
          isAnimating = true;
          window.location.href = href;
        };
    
        navLinks.forEach(link => {
          link.addEventListener('click', (e) => {
            e.preventDefault();
            const href = link.getAttribute('href');
            updateActiveLink(href);
            animatePageTransition(href);
          });
        });
    
        updateActiveLink(window.location.pathname);
        window.addEventListener('popstate', () => updateActiveLink(window.location.pathname));
      });

      const ws = new WebSocket(`ws://${window.location.host}/online-check`);

      ws.open = () => {
         console.log('WebSocket connection opened');
      }
    </script>      

      
      <div id="colcont" class="lg:pl-56">
        <div class="sticky backdrop-blur top-0 z-40 flex h-16 shrink-0 items-center gap-x-4 bg-transparent px-4 sm:gap-x-6 sm:px-4 lg:px-4">
           <div class="hidden lg:block">
           <button type="button" id="sidebar-toggle" class="hidden lg:block w-fit p-2 mt-1 rounded-xl dark:text-white border border-neutral-700/20 dark:border-white/5 hover:scale-110 active:scale-100 duration-200 text-neutral-500">
              <span class="sr-only">Open sidebar</span>
              <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                 <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
              </svg>
           </button>
        </div>

        <div class="flex flex-1 gap-x-4 self-stretch lg:gap-x-6">
          <div class="relative flex flex-1 flex-col">
             <div class="ml-14 lg:-ml-2 flex items-center w-fit mt-3.5 px-4 py-2 h-10  rounded-xl border border-neutral-700/20 dark:border-white/5  active:scale-100 duration-200 bg-transparent text-white">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-5 w-5 text-neutral-400">
                   <path fill-rule="evenodd" d="M10.5 3.75a6.75 6.75 0 1 0 0 13.5 6.75 6.75 0 0 0 0-13.5ZM2.25 10.5a8.25 8.25 0 1 1 14.59 5.28l4.69 4.69a.75.75 0 1 1-1.06 1.06l-4.69-4.69A8.25 8.25 0 0 1 2.25 10.5Z" clip-rule="evenodd" />
                </svg>
                <input id="searchInput" 
                   class="bg-transparent border-transparent ml-2 focus-visible:ring-transparent border-none ring-transparent sm:text-sm placeholder:text-zinc-500 text-neutral-700 dark:text-neutral-300 focus-visible:outline-none" 
                   placeholder="Search" 
                   type="search" 
                   name="search"
                   autocomplete="off"
                   onclick="input.blur()"
                   onfocus="showSearchResults()">
             </div>
             <div id="searchResults" class="absolute bg-white w-[12.5rem] rounded-xl shadow-lg hidden mt-20 px-2 pb-2 border border-neutral-800/20">
             </div>
          </div>
          <script>
             
             document.addEventListener('keydown', function(event) {
               if (event.key === 'control' && event.key === 'k') {
                 event.preventDefault();
                 document.getElementById('searchInput').focus();
               }
             });
             
             function showSearchResults() {
               document.getElementById('searchResults').classList.remove('hidden');
             }
             
             document.getElementById('searchInput').addEventListener('focus', showSearchResults);
          </script>
          <script>
             function showSearchResults() {
                 var searchResults = document.getElementById('searchResults');
                 searchResults.classList.remove('hidden');
             }
             
             document.addEventListener('click', function(event) {
                 var searchInput = document.getElementById('searchInput');
                 var searchResults = document.getElementById('searchResults');
                 if (!searchInput.contains(event.target) && !searchResults.contains(event.target)) {
                     searchResults.classList.add('hidden');
                 }
             });
      
             
          </script>
       </div>
      <script src="/javascript/search.js"></script>
        </div>
     </div>